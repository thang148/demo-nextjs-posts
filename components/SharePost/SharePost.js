import ReactDOM from "react-dom"
// import { FacebookProvider, ShareButton } from "react-facebook"
import { FacebookShareButton } from "react-share"
import { useEffect, useState } from "react"
import { isMobile, isTablet } from "react-device-detect"

export default function SharePost({ isEmagazine }) {
  const [isShow, setShow] = useState(false)
  const newUrl = window.location.href
  function onNewTab() {
    if (isMobile || isTablet) {
      if (navigator.share) {
        navigator
          .share({
            title: "Onsports",
            url: newUrl
          })
          .then(() => {
            console.log("Successfully shared")
          })
          .catch((error) => {
            console.error("Something went wrong", error)
          })
      }
    }
  }

  useEffect(() => {
    if (window && window.innerWidth > 1279) {
      setShow(true)
    } else {
      setShow(false)
    }
  }, [])
  const classBase = isShow && !isEmagazine ? "__share fixed space-x-0 space-y-4" : "flex"
  return (
    <div className={`${classBase}`}>
      <a className="md:hidden" onClick={onNewTab} role="button">
        {icFace}
      </a>
      <div className="hidden md:block">
        <FacebookShareButton appId="1229685727480581" url={newUrl}>
          {icFace}
        </FacebookShareButton>
      </div>
      <a
        role="button"
        className="zalo-share-button block cursor-pointer mx-4"
        data-href={newUrl}
        data-oaid="579745863508352884"
        data-layout="1"
        data-color="blue"
        data-customize="true"
      >
        {icZalo}
      </a>

      {!isEmagazine && (
        <div className="hidden xl:block px-1 my-2">
          <div className="border-b border-gray-300 w-full"></div>
        </div>
      )}
      <ShareLink newUrl={newUrl} />
    </div>
  )
}
const icFace = (
  <svg
    width="36"
    className="_icon_share_fb"
    height="36"
    viewBox="0 0 40 40"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle cx="20" cy="20" r="19.5" stroke="#C1C7D0" />
    <path
      d="M21.397 28.9972V20.8012H24.162L24.573 17.5922H21.397V15.5482C21.397 14.6222 21.655 13.9882 22.984 13.9882H24.668V11.1272C23.8487 11.0394 23.0251 10.997 22.201 11.0002C19.757 11.0002 18.079 12.4922 18.079 15.2312V17.5862H15.332V20.7952H18.085V28.9972H21.397Z"
      fill="#636F82"
    />
  </svg>
)

const icZalo = (
  <svg
    width="36"
    className="_icon_share_zl"
    height="36"
    viewBox="0 0 40 40"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle cx="20" cy="20" r="19.5" stroke="#C1C7D0" />
    <g clipPath="url(#clip0_3712:27462)">
      <path
        d="M10.5965 22.7068C11.7492 22.7068 12.8333 22.6991 13.9097 22.7068C14.5128 22.7144 14.8411 22.9663 14.9021 23.4473C14.9708 24.0504 14.6197 24.455 13.9631 24.4627C12.7264 24.4779 11.4973 24.4703 10.2606 24.4703C9.90176 24.4703 9.55059 24.4856 9.19178 24.4627C8.749 24.4398 8.31385 24.3482 8.1001 23.8901C7.88634 23.432 8.03902 23.0198 8.32912 22.6457C9.50478 21.1494 10.6881 19.6454 11.8714 18.1491C11.9401 18.0575 12.0088 17.9659 12.0775 17.8819C12.0012 17.7521 11.8943 17.8132 11.8027 17.8055C10.9782 17.7979 10.1461 17.8055 9.32156 17.7979C9.13071 17.7979 8.93986 17.775 8.75664 17.7368C8.32149 17.6376 8.05429 17.2024 8.15354 16.7749C8.22224 16.4848 8.45127 16.2481 8.74137 16.1794C8.92459 16.1336 9.11544 16.1107 9.3063 16.1107C10.6652 16.1031 12.0317 16.1031 13.3906 16.1107C13.6349 16.1031 13.8715 16.1336 14.1082 16.1947C14.6273 16.3703 14.8487 16.8512 14.6426 17.3551C14.4594 17.7903 14.1693 18.1643 13.8792 18.5384C12.8791 19.8134 11.879 21.0807 10.8789 22.3403C10.795 22.4396 10.7186 22.5388 10.5965 22.7068Z"
        fill="#636F82"
      />
      <path
        d="M19.4525 18.6913C19.6357 18.4546 19.8266 18.2332 20.1396 18.1721C20.7427 18.05 21.3076 18.4393 21.3152 19.0501C21.3382 20.5769 21.3305 22.1038 21.3152 23.6306C21.3152 24.0276 21.0557 24.3788 20.6816 24.4933C20.2999 24.6384 19.8648 24.5239 19.6128 24.1956C19.483 24.0353 19.4296 24.0047 19.2464 24.1498C18.5517 24.7147 17.7654 24.814 16.918 24.5391C15.5591 24.0963 15.0018 23.0352 14.8491 21.745C14.6888 20.3479 15.1545 19.157 16.4065 18.4241C17.4447 17.8057 18.4982 17.8591 19.4525 18.6913ZM16.75 21.4778C16.7653 21.8137 16.8722 22.1343 17.0706 22.4015C17.4829 22.9512 18.2692 23.0657 18.8265 22.6535C18.9181 22.5847 19.0021 22.5008 19.0784 22.4015C19.5059 21.8213 19.5059 20.867 19.0784 20.2868C18.8647 19.9891 18.5288 19.8135 18.17 19.8059C17.3302 19.7524 16.7424 20.4013 16.75 21.4778ZM24.743 21.5236C24.6819 19.5616 25.9721 18.0958 27.8043 18.0424C29.751 17.9813 31.171 19.2867 31.232 21.1953C31.2931 23.1268 30.1098 24.4933 28.2853 24.6765C26.2927 24.875 24.7125 23.4322 24.743 21.5236ZM26.6592 21.3404C26.6439 21.7221 26.7584 22.0962 26.9874 22.4092C27.4073 22.9588 28.1936 23.0657 28.7433 22.6382C28.8273 22.5771 28.896 22.5008 28.9647 22.4244C29.4075 21.8442 29.4075 20.867 28.9723 20.2868C28.7586 19.9967 28.4227 19.8135 28.0639 19.8059C27.2394 19.7601 26.6592 20.3861 26.6592 21.3404ZM24.0712 20.0044C24.0712 21.1877 24.0788 22.371 24.0712 23.5543C24.0788 24.0963 23.6513 24.5468 23.1093 24.562C23.0177 24.562 22.9184 24.5544 22.8268 24.5315C22.4451 24.4322 22.155 24.0276 22.155 23.5467V17.4774C22.155 17.1186 22.1474 16.7674 22.155 16.4086C22.1626 15.8208 22.5367 15.4391 23.1016 15.4391C23.6818 15.4314 24.0712 15.8132 24.0712 16.4239C24.0788 17.6148 24.0712 18.8134 24.0712 20.0044Z"
        fill="#636F82"
      />
    </g>
    <defs>
      <clipPath id="clip0_3712:27462">
        <rect width="24" height="24" fill="white" transform="translate(8 8)" />
      </clipPath>
    </defs>
  </svg>
)
const icLink = (
  <svg
    width="36"
    height="36"
    className="_icon_share_zl"
    viewBox="0 0 40 40"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle cx="20" cy="20" r="19.5" stroke="#C1C7D0" />
    <path
      d="M21.035 17.8311L17.8327 21.0334C17.7577 21.1078 17.6981 21.1964 17.6575 21.2939C17.6168 21.3915 17.5959 21.4961 17.5959 21.6018C17.5959 21.7075 17.6168 21.8121 17.6575 21.9097C17.6981 22.0073 17.7577 22.0958 17.8327 22.1702C17.9071 22.2453 17.9957 22.3048 18.0932 22.3455C18.1908 22.3861 18.2954 22.407 18.4011 22.407C18.5068 22.407 18.6115 22.3861 18.709 22.3455C18.8066 22.3048 18.8951 22.2453 18.9695 22.1702L22.1718 18.968C22.3226 18.8172 22.4072 18.6127 22.4072 18.3995C22.4072 18.1864 22.3226 17.9819 22.1718 17.8311C22.0211 17.6804 21.8166 17.5957 21.6034 17.5957C21.3902 17.5957 21.1857 17.6804 21.035 17.8311V17.8311Z"
      fill="#636F82"
    />
    <path
      d="M20.2265 24.3237L19.2018 25.3404C18.6265 25.9332 17.8532 26.2935 17.0293 26.3525C16.2053 26.4116 15.3885 26.1653 14.7346 25.6607C14.389 25.3759 14.1069 25.0217 13.9067 24.6211C13.7064 24.2205 13.5924 23.7824 13.5721 23.335C13.5517 22.8876 13.6254 22.4409 13.7884 22.0238C13.9514 21.6066 14.2001 21.2283 14.5184 20.9133L15.6552 19.7685C15.7303 19.694 15.7898 19.6055 15.8305 19.5079C15.8711 19.4104 15.8921 19.3058 15.8921 19.2001C15.8921 19.0944 15.8711 18.9897 15.8305 18.8922C15.7898 18.7946 15.7303 18.7061 15.6552 18.6317C15.5808 18.5566 15.4923 18.4971 15.3947 18.4564C15.2972 18.4158 15.1925 18.3949 15.0868 18.3949C14.9812 18.3949 14.8765 18.4158 14.779 18.4564C14.6814 18.4971 14.5929 18.5566 14.5184 18.6317L13.5017 19.6564C12.6452 20.4858 12.1188 21.5978 12.0202 22.786C11.9215 23.9741 12.2574 25.1577 12.9653 26.117C13.3855 26.6621 13.9169 27.1116 14.5242 27.4356C15.1315 27.7595 15.8007 27.9506 16.4875 27.996C17.1743 28.0414 17.8629 27.9402 18.5075 27.6991C19.1522 27.4579 19.7381 27.0824 20.2265 26.5973L21.3633 25.4605C21.5141 25.3098 21.5987 25.1053 21.5987 24.8921C21.5987 24.6789 21.5141 24.4745 21.3633 24.3237C21.2126 24.173 21.0081 24.0883 20.7949 24.0883C20.5817 24.0883 20.3772 24.173 20.2265 24.3237V24.3237ZM26.1347 12.9716C25.1688 12.2563 23.9755 11.917 22.7778 12.0172C21.58 12.1174 20.4597 12.6502 19.6261 13.516L18.7615 14.3967C18.6626 14.4685 18.58 14.5603 18.5189 14.6661C18.4578 14.7719 18.4196 14.8893 18.4068 15.0108C18.3939 15.1323 18.4068 15.2552 18.4444 15.3714C18.4821 15.4876 18.5437 15.5947 18.6254 15.6856C18.6998 15.7606 18.7883 15.8202 18.8859 15.8608C18.9834 15.9015 19.0881 15.9224 19.1938 15.9224C19.2994 15.9224 19.4041 15.9015 19.5016 15.8608C19.5992 15.8202 19.6877 15.7606 19.7622 15.6856L20.8029 14.6368C21.375 14.0415 22.1474 13.6792 22.971 13.6201C23.7945 13.5609 24.6108 13.8091 25.2621 14.3166C25.6103 14.6014 25.8946 14.9565 26.0964 15.3585C26.2982 15.7606 26.4131 16.2006 26.4335 16.65C26.4539 17.0994 26.3793 17.5481 26.2148 17.9668C26.0502 18.3855 25.7992 18.7648 25.4782 19.08L24.3414 20.2248C24.2664 20.2992 24.2068 20.3878 24.1662 20.4853C24.1255 20.5829 24.1046 20.6875 24.1046 20.7932C24.1046 20.8989 24.1255 21.0035 24.1662 21.1011C24.2068 21.1986 24.2664 21.2872 24.3414 21.3616C24.4158 21.4366 24.5044 21.4962 24.6019 21.5368C24.6995 21.5775 24.8041 21.5984 24.9098 21.5984C25.0155 21.5984 25.1201 21.5775 25.2177 21.5368C25.3153 21.4962 25.4038 21.4366 25.4782 21.3616L26.615 20.2248C27.0987 19.7365 27.4731 19.1511 27.7135 18.5072C27.9538 17.8633 28.0546 17.1758 28.0092 16.49C27.9638 15.8042 27.7732 15.1359 27.45 14.5294C27.1269 13.9228 26.6785 13.3919 26.1347 12.9716V12.9716Z"
      fill="#636F82"
    />
  </svg>
)

function ShareLink({ newUrl }) {
  function onCopy() {
    navigator.clipboard.writeText(newUrl)
    const el = document.getElementById("__tolltip")
    const rect = el.getBoundingClientRect()
    var elemDiv = document.createElement("div")
    const { x, top } = rect
    let container = document.getElementById("box_out_line")
    container.appendChild(elemDiv)
    ReactDOM.render(<Noti top={top} left={x} />, elemDiv)
    setTimeout(() => {
      container.removeChild(elemDiv)
    }, 2000)
  }

  return (
    <div onClick={onCopy} role="button" id="__tolltip" className="relative" tabIndex="0">
      {icLink}
    </div>
  )
}
function Noti({ top, left }) {
  return (
    <div className="fixed py-1 text-sm px-2 z-30 rounded text-white __tooltip" style={{ top: top + 60, left: left }}>
      Link đã được copy
    </div>
  )
}
